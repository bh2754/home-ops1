---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app readarr
  namespace: organizers
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: onepassword-connect
      namespace: external-secrets
    - name: nginx-external
      namespace: networking
    - name: authelia
      namespace: security
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      main:
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          annotations:
            setGateway: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568   # was 568 before app template upgrade
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          main:
            image:
              repository: ghcr.io/bh2754/readarr-nightly
              tag: 0.3.16.2380@sha256:9029d52a8c8a0478f4ca8c258585631bc129fe8e85510506ab2b2ccd531e7986
            env:
              READARR__INSTANCE_NAME: Readarr
              READARR__PORT: &port 80
#             READARR__AUTHENTICATION_METHOD: External
#             READARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
#             READARR__APPLICATION_URL: "https://audio.${SECRET_DOMAIN}"
              READARR__LOG_LEVEL: info
            envFrom:
              - secretRef:
                  name: readarr-secret
            resources:
              requests:
                cpu: 20m
                memory: 323M
              limits:
                memory: 323M
          netshoot:
            image:
              repository: ghcr.io/nicolaka/netshoot
              tag: v0.11
            command: ["/bin/bash"]
            args: ["-c", "while true; do ping localhost; sleep 60;done"]

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: "external"
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.bharris.vip?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          hajimari.io/enable: "true"
          hajimari.io/icon: "book-open-page-variant"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/readarr/hotline.css"></head>';
             sub_filter_once on;

        hosts:
          - host: &host "readarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: readarr-config-v1
      books:
        enabled: true
        type: nfs
        server: &nas "${NFS_SERVER}"
        path: ${NFS_BOOKS}
        mountPath: /media
      downloads:
        enabled: true
        type: nfs
        server: *nas
        path: ${NFS_DOWNLOAD}
        mountPath: /downloads
