---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app readarr
  namespace: organizers
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: ghcr.io/bh2754/readarr-nightly
      tag: 0.3.8.2267@sha256:696fc6b23eea191b3f540013322f8e3b6109d98248365b30ece65f1175ac6572
      pullPolicy: IfNotPresent
    env:
      TZ: "${TZ}"
      READARR__INSTANCE_NAME: Readarr
      READARR__PORT: &port 80
      READARR__LOG_LEVEL: info
    envFrom:
      - secretRef:
          name: readarr-secret
    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: "external"
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.bharris.vip?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/readarr/hotline.css"></head>';
            sub_filter_once on;
          hajimari.io/enable: "true"
          hajimari.io/icon: "book-open-page-variant"

        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100

    persistence:
      config:
        enabled: true
        existingClaim: readarr-config-v1
      books:
        enabled: true
        type: nfs
        server: &nas "${NFS_SERVER}"
        path: ${NFS_BOOKS}
        mountPath: /media
      downloads:
        enabled: true
        type: nfs
        server: *nas
        path: ${NFS_DOWNLOAD}
        mountPath: /downloads
    podAnnotations:
      setGateway: "true"
    resources:
      requests:
        cpu: 10m
        memory: 204M
        ephemeral-storage: "2Gi"
      limits:
        memory: 292M
        ephemeral-storage: "4Gi"
