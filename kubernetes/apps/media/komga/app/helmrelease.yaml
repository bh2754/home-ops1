---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app komga
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: onepassword-connect
      namespace: external-secrets
    - name: nginx-external
      namespace: networking
    - name: authelia
      namespace: security
    - name: rook-ceph-cluster
      namespace: rook-ceph

  values:
    controllers:
      main:
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          annotations:
            setGateway: "false"
          securityContext:
            runAsUser: 568
            runAsGroup: 568   # was 568 before app template upgrade
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.0.733@sha256:7f1496845bc0bf1d46b37b1013bb2a4b7af79e13b2a12dbc882d456bc869ca39
            env:
              KOMGA_CONFIGDIR: "/config"
              SERVER_PORT: &port 8443
    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: "internal"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-box"
          hajimari.io/appName: komga
        hosts:
          - host: &host "komga.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http

        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: komga-config-v1

      media:
        enabled: true
        type: nfs
        server: "${NFS_SERVER}"
        path: /volume1/Media/comics
#       mountPath: /media
